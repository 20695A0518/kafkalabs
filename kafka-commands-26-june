1. To Start Zookeeper
sh zookeeper-server-start.sh ../config/zookeeper.properties

default port : 2181

2. To Start Kafka Server
sh kafka-server-start.sh ../config/server.properties 

default port: 9092

3. To create a topic
sh kafka-topics.sh --bootstrap-server localhost:9092  --create --topic first-topic --partitions 1 --replication-factor 1

4. To Describe the topic
sh kafka-topics.sh --bootstrap-server localhost:9092  --describe  --topic first-topic 

5. To produce a message
sh kafka-console-producer.sh --bootstrap-server localhost:9092 --topic first-topic

6. To consume the messages from the beginning
sh kafka-console-consumer.sh --bootstrap-server localhost:9092  --topic first-topic --group fg1 --from-beginning

7. To get a detailed description about the log file, use a tool kafka-run-class
sh kafka-run-class.sh  kafka.tools.DumpLogSegments --deep-iteration --print-data-log  --files /tmp/kafka-logs/first-topic-0/00000000000000000000.log

8.To get End offset details for each partition
sh kafka-run-class.sh  kafka.tools.GetOffsetShell --bootstrap-server localhost:9092 --topic first-topic

9. To stop kafka server
sh kafka-server-stop.sh 

10. To stop zookeeper server
sh zookeeper-server-stop.sh

11. To start all the confluent services
./confluent local services start
(this will start 7 services)

* Control center -> default port -> 9021
To access control-centre ->  http://localhost:9021/clusters

12. To start only zookeeper and kafka
./confluent local services zookeeper start
./confluent local services kafka start

13. To display consumer group information
./kafka-consumer-groups --bootstrap-server localhost:9092 --describe --group cg1

consumer-group demo:
./kafka-console-producer --bootstrap-server localhost:9092 --topic  order-topic --property "parse.key=true" --property "key.separator=:"

./kafka-console-consumer  --bootstrap-server localhost:9092 --topic  order-topic --property print.key=true --property key.separator=":" --group og1 --from-beginning


Cluster Demo
-------------

1. Start 3 brokers
2. Create a cluster-toppic with 3 partitions and replication-factor 3

sh kafka-console-consumer.sh  --bootstrap-server localhost:9092 --topic  cluster-topic --property print.key=true --property key.separator=":"  --group cg1 --from-beginning

sh kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group cg1

sh kafka-console-producer.sh --bootstrap-server localhost:9092 --topic  cluster-topic --property "parse.key=true" --property "key.separator=:"
1001:laptop
2001:desktop
1001:book
1001:mouse
2001:speaker








