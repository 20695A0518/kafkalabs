1. create certificates

VALIDITY=1825

KAFKA_HOST=localhost
SSLPASSPHRASE=kafka@123

CERTIFICATE_INFO="CN=$KAFKA_HOST,OU=kafka,O=kafka,L=kafka,ST=kafka,C=XX"
CA_INFO="/C=XX/ST=kafka/L=kafka/O=kafka/OU=kafka/CN=$KAFKA_HOST/"


###Create CA and server keystore/truststore###
openssl req -new -x509 -keyout ca-key -out ca-cert -days $VALIDITY -subj $CA_INFO -passout pass:$SSLPASSPHRASE

keytool -noprompt -keystore kafka.server.keystore.jks -alias $KAFKA_HOST -validity $VALIDITY -genkey -dname $CERTIFICATE_INFO -keypass $SSLPASSPHRASE -storepass $SSLPASSPHRASE

keytool -noprompt -keystore kafka.server.truststore.jks -alias CARoot -import -file ca-cert -storepass $SSLPASSPHRASE

keytool -noprompt -keystore kafka.server.keystore.jks -alias $KAFKA_HOST -certreq -file cert-file-$KAFKA_HOST -storepass $SSLPASSPHRASE

openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file-$KAFKA_HOST -out cert-signed-$KAFKA_HOST -days $VALIDITY -CAcreateserial -passin pass:$SSLPASSPHRASE

keytool -noprompt -keystore kafka.server.keystore.jks -alias CARoot -import -file ca-cert -storepass $SSLPASSPHRASE

keytool -noprompt -keystore kafka.server.keystore.jks -alias $KAFKA_HOST -import -file cert-signed-$KAFKA_HOST -storepass $SSLPASSPHRASE

###Create client keystore and truststore###
USERNAME=acladmin
CLIENT_SSLPASSPHRASE=client@123
CLIENT_CERTIFICATE_INFO="CN=$USERNAME,OU=kafka,O=kafka,L=kafka,ST=kafka,C=XX"

keytool -noprompt -keystore kafka.client.keystore.jks -alias $USERNAME -validity $VALIDITY -genkey -dname $CLIENT_CERTIFICATE_INFO -keypass $CLIENT_SSLPASSPHRASE -storepass $CLIENT_SSLPASSPHRASE

keytool -noprompt -keystore kafka.client.truststore.jks -alias CARoot -import -file ca-cert -storepass $CLIENT_SSLPASSPHRASE

keytool -noprompt -keystore kafka.client.keystore.jks -alias $USERNAME -certreq -file cert-file-client-$USERNAME -storepass $CLIENT_SSLPASSPHRASE

openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file-client-$USERNAME -out cert-signed-client-$USERNAME -days $VALIDITY -CAcreateserial -passin pass:$SSLPASSPHRASE

###Add client certificate to server truststore###
keytool -keystore kafka.server.truststore.jks -alias $USERNAME -import -file cert-signed-client-$USERNAME -storepass $SSLPASSPHRASE


2. add the below entries in server.properties

listeners=SSL://:9093
advertised.listeners=SSL://localhost:9093
listener.security.protocol.map=SSL:SSL
security.protocol=SSL
security.inter.broker.protocol=SSL
ssl.keystore.type=JKS
ssl.keystore.location=/home/ubuntu/Desktop/kafka/ssl/kafka.server.keystore.jks
ssl.keystore.password=kafka@123
ssl.key.password=kafka@123
ssl.truststore.type=JKS
ssl.truststore.location=/home/ubuntu/Desktop/kafka/ssl/kafka.server.truststore.jks
ssl.truststore.password=kafka@123
authorizer.class.name=kafka.security.authorizer.AclAuthorizer
allow.everyone.if.no.acl.found=false
super.users=User:CN=localhost,OU=kafka,O=kafka,L=kafka,ST=kafka,C=XX;User:CN=acladmin,OU=kafka,O=kafka,L=kafka,ST=kafka,C=XX
ssl.client.auth=required
ssl.enabled.protocols=TLSv1.2,TLSv1.1,TLSv1


3. create a file client-ssl-auth.properties
security.protocol=SSL 
ssl.truststore.location=/home/ubuntu/Desktop/kafka/ssl/kafka.client.truststore.jks 
ssl.truststore.password=client@123
ssl.keystore.location=/home/ubuntu/Desktop/kafka/ssl/kafka.client.keystore.jks 
ssl.keystore.password=client@123 
ssl.key.password=client@123

4. Start Zookeeper
sh zookeeper-server-start.sh ../config/zookeeper.properties


5. Start Kafka Server
sh kafka-server-start.sh ../config/server.properties 

6. run the below commands

./kafka-acls.sh --bootstrap-server localhost:9093 --command-config client-ssl-auth.properties --add --allow-principal 
 User:CN=acladmin,OU=kafka,O=kafka,L=kafka,ST=kafka,C=XX  --operation Create --topic acltest

./kafka-acls.sh --bootstrap-server localhost:9093  --add  --allow-principal  User:CN=acladmin,OU=kafka,O=kafka,L=kafka,ST=kafka,C=XX 
--consumer --topic acltest --group acl-consumer --command-config client-ssl-auth.properties

./kafka-acls.sh --bootstrap-server localhost:9093  --add  --allow-principal User:"CN=acladmin,OU=kafka,O=kafka,L=kafka,ST=kafka,C=XX" 
--producer --topic acltest --group acl-consumer --command-config client-ssl-auth.properties

sh kafka-console-producer.sh --bootstrap-server localhost:9093  --topic actltest   --producer.config client-ssl-auth.properties

sh kafka-console-consumer.sh --bootstrap-server localhost:9093 --consumer.config  client-ssl-auth.properties   --topic actltest --from-beginning

